<root>
	<styles>
		<include src="file://{resources}/styles/main.scss" />
	</styles>
	<scripts>
		<include type="module" src="file://{scripts}/components/chat.ts" />
	</scripts>

	<snippets>
		<!-- 
			Snippet for a standard chat message.
			- Icon will be set based on ChatMessageType posted to the MomentumChatMessage event in C++,
			  where each value maps via g_szChatMessageTypeToString to file://{images}/chat/<type>.svg
			- Text just whatever string is passed, with HTML and dialog variables enabled. So those strings are
			  either in POEditor or hardcoded in C++ (bit yucky but dedicated snippets are hardly better, esp with escaping).
			  NOTE: Since dialog variables are KV-based, they're always strings - must be {s:<var>} for everything.
		-->
		<snippet name="chat-message">
			<Panel class="chat-entry">
				<Image id="Icon" class="chat-entry__icon" textureheight="32" />
				<Label id="Text" class="chat-entry__message" html="true" acceptsinput="true" />
			</Panel>
		</snippet>
	</snippets>

	<Panel class="chat" defaultfocus="ChatInput">
		<!-- CAUTION: inverse flow everywhere!!-->
		<ConVarEnabler convar="mom_chat_typing_indicator_incoming" togglevisibility="true">
			<Label id="ChatMemberTypingLabel" class="chat__member-typing" text=" " />
		</ConVarEnabler>
		<Panel class="chat__input-container">
			<TextEntry id="ChatInput" class="chat__elem chat__input" oninputsubmit="ChatHandler.submitText()" maxchars="127" clearaftersubmit="true" />
			<Button class="chat__elem chat__send" onactivate="$('#ChatInput').Submit()">
				<Label class="button__text chat__send-text" text="#Chat_Send" />
			</Button>
		</Panel>
		<Panel class="chat__elem chat__history-wrapper">
			<Panel id="ChatHistory" class="chat__history" html="true">
				<!-- C++ will add messages here! Each child will have the chat-entry class -->
			</Panel>
		</Panel>
	</Panel>
</root>
