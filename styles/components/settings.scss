@use '../config' as *;
@use '../abstract/mixin';
@use '../abstract/function';
@use '../controls/button';
@use '../controls/radio-button';

.settings-enum,
.settings-enum-dropdown,
.settings-slider,
.settings-keybinder,
.colordisplay {
	flow-children: right;
	align: center center;

	width: 100%;
	height: 48px;

	padding: 0 6px 0 12px;

	border-radius: 2px;
	border: 1px solid rgba(0, 0, 0, 0.5);

	margin-bottom: 4px;

	&.--even {
		background-color: rgba(255, 255, 255, 0.03);
	}
	&.--odd {
		background-color: rgba(255, 255, 255, 0.02);
	}
	&.--even,
	&.--odd {
		transition: background-color 0.1s ease-in-out 0s;

		&:hover {
			background-color: rgba(255, 255, 255, 0.06);
		}

		&:disabled {
			background-color: rgba(128, 128, 128, 0.1);
		}
	}

	&__title-container {
		width: 35%;
		vertical-align: center;
		margin-right: 10px;
	}

	&__input-container {
		flow-children: right;
		width: 65%;
		vertical-align: center;
	}

	&__title-container:parentdisabled,
	&__input-container:parentdisabled {
		opacity: 0.5;
		wash-color: rgba(127, 127, 127, 1);
	}

	&__title {
		vertical-align: center;
		@include mixin.font-regular();
		font-size: 18px;
		overflow: squish;
		text-overflow: shrink;
	}
}

.settings-enum {
	&__values {
		flow-children: right;
		horizontal-align: right;
		width: fit-children;
		height: 38px;
		vertical-align: center;

		& > RadioButton {
			@extend .button;
			@extend .radiobutton;
			@extend .radiobutton--blue;

			width: fit-children;
			min-width: 140px;
			height: 100%;
			margin-left: 6px;
		}

		& > RadioButton > Label {
			@extend .button__text;
			font-size: 22px;
		}
	}
}

.settings-enum-dropdown {
	&__dropdown {
		horizontal-align: right;
	}
}

.settings-slider {
	&__slider {
		width: fill-parent-flow(1);
		vertical-align: center;
		margin: 0 12px;
	}

	&__textentry {
		width: 80px;
	}

	&__outofbounds {
		visibility: collapse;

		.OutOfBounds & {
			visibility: visible;
			wash-color: $orange;
			width: 24px;
			height: 24px;
			vertical-align: middle;
			margin-right: 8px;
		}
	}
}

.settings-keybinder {
	$root: &;

	transition: background-color 0.1s linear 0s;

	&:hover {
		background-color: rgba(255, 255, 255, 0.025);
	}

	&__container {
		min-width: 32px;
		height: 32px;
		padding: 2px 0;
		align: center center;

		horizontal-align: right;
		border-radius: 4px;
		background-color: rgba(255, 255, 255, 0.1);
		border: 1px solid rgba(255, 255, 255, 0.05);
		box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.5);

		transition-property: background-color, border;
		transition-duration: 0.15s;
		transition-timing-function: ease-in-out;

		&:hover {
			background-color: rgba($blue, 0.3);
			border: 1px solid rgba($blue, 0.4);
		}

		#{$root}:selected & {
			animation-name: PulseBackgroundBlue;
			animation-duration: 1.5s;
			animation-timing-function: linear;
			animation-iteration-count: infinite;
		}
	}

	&__key-container {
		height: 100%;
		align: center center;

		&.ActiveBindButton {
			width: 100%;

			#{$root}:selected & {
				visibility: collapse;
			}
		}
	}

	&__key {
		@include mixin.font-header();
		font-size: 25px;
		margin: 0 6px;
		align: center center;
		text-align: center;
	}

	&__clear {
		width: 100%;
		height: 100%;
		align: center center;
		margin: 2px 4px;
		opacity: 0.8;

		background-image: url('file://{images}/close-circle.svg');
		background-size: 100% 100%;
		background-repeat: no-repeat;
		visibility: collapse;

		transition: wash-color 0.1s ease-in-out 0s;

		#{$root}:selected & {
			visibility: visible;
		}

		&:hover {
			wash-color: rgb(175, 175, 175);
		}
	}
}

ConVarEnabler > .settings-enum,
ConVarEnabler > .settings-enum-dropdown,
ConVarEnabler > .settings-slider,
ConVarEnabler > .settings-keybinder,
ConVarEnabler > .colordisplay {
	height: 48px;
	transition: height 0.1s ease-out 0s;

	&:parentdisabled {
		height: 0px;
	}
}

// Toggle: We don't actually use this in the settings menu.
// Rather, it's styled like a button and used in other parts of game UI.

.settings-toggle {
	@include button.button();

	// See: https://sass-lang.com/documentation/breaking-changes/mixed-decls/
	& {
		flow-children: left;
	}

	&__text {
		// tickbox margin causing some weird layouting, hack to fix
		margin-left: -8px;
	}

	.TickBox {
		height: 100%;
		width: height-percentage(100%);
		margin: 6px;
		margin-left: 4px;
		border-radius: 4px;
		border: 1px solid rgba(255, 255, 255, 0.2);
		background-color: rgba(0, 0, 0, 0.7);

		img-shadow: rgba(0, 0, 0, 0.5) 0px 1px 0.5px 0px;
		transition-property: background-color, border;
		transition-duration: 0.1s;
		transition-timing-function: ease-in-out;
	}

	&:hover {
		.TickBox {
			border: 1px solid rgba(255, 255, 255, 0.3);
			background-color: rgba(0, 0, 0, 0.75);
		}
	}

	&:selected {
		.TickBox {
			background-color: rgba(0, 0, 0, 0.8);
			//@include mixin.button-gradient();
			//background-color: rgb(66, 94, 108);
			background-image: url('file://{images}/checkmark.svg');
			background-size: 60% 60%;
			background-repeat: no-repeat;
			background-position: center;
		}
	}
}
